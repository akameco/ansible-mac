---
- name: homebrew の tap リポジトリを追加
  homebrew_tap: tap={{ item }} state=present
  with_items: homebrew_taps

- name: homebrew をアップデート
  homebrew: update_homebrew=yes

- name: brew パッケージをインストール
  homebrew: >
    name={{ item.name | default(item) }}
    state={{ item.state | default('latest') }}
    install_options={{
      item.install_options | default() | join(',')
      if item.install_options is not string
      else item.install_options
    }}
  with_items: homebrew_packages
  register: brew_result

- name: opensslをインストール
  homebrew: >
    name=openssl
    state=linked
    install_options=force
  changed_when: false

- name: homebrew-cask のインストール
  homebrew: name=brew-cask state=latest
  tags: cask

- name: cask パッケージをインストール
  homebrew_cask: >
    name={{ item.name | default(item) }}
    state={{ item.state|default('installed') }}
  with_items: homebrew_cask_packages
  register: cask_result
  tags: cask

# oh-my-zsh
# - name: oh-my-zsh のインストール
#  shell: curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
#  args:
#    creates: ~/.oh-my-zsh/
#  tags: shell

- name: check zsh
  command: echo $SHELL
  register: shell
  changed_when: false
  tags: shell

# - name: shellをzshへ変更
  # command: shell -s /bin/zsh
  # when: shell.stdout.find('/bin/zsh') == -1
  # tags: shell
# - name: install prezto
  # command: git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"
  # args:
    # creates: ~/.zprezto
# - name: setup prezto
  # shell: >-
    # setopt EXTENDED_GLOB
    # for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/^README.md(.N); do
    # ln -s "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"
    # done

- name: 生成されたフォントファイルをコピー
  shell: cp -f $(brew --cellar ricty)/*/share/fonts/Ricty*.ttf ~/Library/Fonts/
  args:
    creates: ~/Library/Fonts/Ricty-Bold.ttf
  notify: run fc-cache

- name: rubyのインストール
  shell: >
    eval "$(rbenv init -)";
    rbenv install {{ rbenv_ruby_version }}
    creates=~/.rbenv/versions/{{ rbenv_ruby_version }}

- shell: >
    eval "$(rbenv init -)";
    rbenv global
  register: rbenv_global_version
  changed_when: false

- name: globalに指定
  shell: >
    eval "$(rbenv init -)";
    rbenv global {{ rbenv_ruby_version }}
  when: rbenv_global_version.stdout != rbenv_ruby_version

- name: gemのインストール
  gem: name={{ item }} state=latest user_install=no executable=~/.rbenv/shims/gem
  notify: rbenv rehash
  with_items: rbenv_global_gems
